name: Deploy Discord Bot

on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:
    branches:
      - main

env:
  PYTHON_VERSION: '3.10'
  FOLDER_PATH: '/home/app'
  DOCKER_IMAGE_NAME: 'python-discord-bot'
  TAR_NAME: 'discord-bot'
  CONTAINER_NAME: 'discord-bot'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. 환경 설정
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx (optional, for multi-platform builds)
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest .

      - name: Save Docker image as tar
        run: docker save ${{ env.DOCKER_IMAGE_NAME }}:latest -o ${{ env.TAR_NAME }}.tar

      - name: Copy Docker image to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ${{ env.TAR_NAME }}.tar
          target: ${{ env.FOLDER_PATH }}/${{ env.TAR_NAME }}.tar

      - name: Load Docker image on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker load -i ${{ env.FOLDER_PATH }}/${{ env.TAR_NAME }}.tar
            docker stop ${{ env.CONTAINER_NAME }} || true
            docker rm ${{ env.CONTAINER_NAME }} || true
            docker run -d --name ${{ env.CONTAINER_NAME }} -p 80:80 ${{ env.DOCKER_IMAGE_NAME }}:latest